version: "3"
services:
  portainer:
    image: portainer/portainer-ce:2.1.1
    container_name: portainer
    depends_on:
      - traefik
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
      - "8000:8000"
    networks:
      - devops
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=http,https
      - traefik.http.routers.portainer.rule=Host(`portainer.docker.localhost`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data

  traefik:
    restart: always
    image: traefik:2.4.5
    ports:
      - "80:80"
      - "443:443"
    networks: 
      - devops
      - inbound
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic.yml:/dynamic.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydevproxy.entrypoints=http,https
      - traefik.http.routers.mydevproxy.rule=Host(`traefik.docker.localhost`)
      - traefik.http.routers.mydevproxy.tls=true
      - traefik.http.routers.mydevproxy.service=api@internal

networks:
  devops:
    name: devops
  inbound:
    name: inbound

volumes: 
  portainer-data: